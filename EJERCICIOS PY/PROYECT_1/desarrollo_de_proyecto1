import csv

def mostrar_menu():
    print("Bienvenido a la base de datos de los estudiantes")
    print(f"que desea hacer?:\n"
          f"1- Ingresar información de n cantidad de estudiantes, uno por uno.\n"
          f"2- Ver la información de todos los estudiantes ingresados.\n"
          f"3- Ver el top 3 de los estudiantes con la mejor nota promedio.\n"
          f"4- Ver la nota promedio entre las notas de todos los estudiantes.\n"
          f"5- Exportar todos los datos actuales a un archivo CSV.\n"
          f"6- Importar los datos de un archivo CSV previamente exportado.\n"
          f"7- Salir.")


def seleccionar_opcion():
    while True:
        try:
            opcion=int(input("por favor ingrese una opcion= "))
            if 1<=opcion<=7:
                return opcion
            else:
                print("Error eleccione una opcion valida del 1-7 ")
        except ValueError:
            print("Error! no es una opcion valida")


def ingresar_estudiante():
    estudiante_ingresado={}
    notas=[]
    estudiante_ingresado["nombre completo"]=input("porfavor ingrese el nombre y apellidos del estudiante=")
    estudiante_ingresado["seccion"]=input("porfavor ingrese la seccion del estudiante=")
    while True:
        try:
            español=int(input("Porfavor ingrese la Nota de Español="))
            if 0<=español<=100:
                estudiante_ingresado["Nota de Español"]=español
                notas.append(español)
                break
            else:
                print("porfavor ingrese una nota valida de 0-100")
        except ValueError:
            print("Porfavor ingrese un valor valido")
    while True:
        try:
            ingles=int(input("Porfavor ingrese la nota de ingles= "))
            if 0<=ingles<=100:
                estudiante_ingresado["Nota de Ingles"]=ingles
                notas.append(ingles)
                break
            else:
                print("Porfavor ingrese una nota valida de 0-100")
        except ValueError:
            print("Porvafor ingrese un valor valido")
    while True:
        try:
            sociales=int(input("Porfavor ingrese la nota de sociales= "))
            if 0<=sociales<=100:
                estudiante_ingresado["Nota de Sociales"]=sociales
                notas.append(sociales)
                break
            else:
                print("Porfavor ingrese una nota valida de 0-100")
        except ValueError:
            print("Porfavor ingrese un valor valido")
    while True:
        try:
            Ciencias=int(input("Porfavor ingrese la nota de Ciencias= "))
            if 0<=Ciencias<=100:
                estudiante_ingresado["Nota de Ciencias"]=Ciencias
                notas.append(Ciencias)
                break
            else:
                print("Por favor ingrese una nota valida de 0-100")
        except ValueError:
            print("Por favor ingrese un valor valido")
    numero_de_notas=len(notas)
    promedio=sum(notas)/numero_de_notas
    estudiante_ingresado["Promedio"]=promedio
    return estudiante_ingresado        


def mostrar_estudiantes(estudiantes):
    if estudiantes:
        print("---------------------------------")
        print("BASE DE DATOS DE ESTUDIANTES")
        print("---------------------------------")
        for i, estudiante in enumerate(estudiantes,1):
            print(f"\nEstudiante numero {i}")
            for clave, valor in estudiante.items():
                print(f"{clave}:{valor}")
    else:
        print("aun no hay informacion en nuestra base de datos, porfavor ingrese un estudiante primero")


def mostrar_los_mejores_promedios(estudiantes):
    if estudiantes:
        estudiantes.sort(key=lambda estudiante: estudiante["Promedio"], reverse=True)
        top_3_estudiantes=estudiantes[:3]
        print("---TOP TRES DEL PROMEDIO MAS ALTO---")
        for i, estudiante in enumerate(top_3_estudiantes,1):
            print(f"Puesto numero {i}")
            for key, value in estudiante.items():
                print(f"{key}: {value}")
    else:
        print("aun no hay informacion en nuestra base de datos, porfavor ingrese un estudiante primero")


def mostrar_el_promedio_total(estudiantes):
    if estudiantes:
        promedios=[]
        for estudiante in estudiantes:
            promedio_actual=estudiante["Promedio"]
            promedios.append(promedio_actual)
        cantidad_de_promedio=len(promedios)
        suma_de_promedios=sum(promedios)
        promedio_total=suma_de_promedios/cantidad_de_promedio
        print(f"La nota promedio del total de los estudiantes es de: {promedio_total}")
    else:
        print("aun no hay informacion en nuestra base de datos, porfavor ingrese un estudiante primero")


def exportar_archivo_de_estudiantes(file_path, data, header):
    with open(file_path, "w", encoding="utf-8", newline="") as file:
        writer=csv.DictWriter(file, fieldnames=header)
        writer.writeheader()
        writer.writerows(data)

def importar_archivo_de_estudiantes(file_path):
    estudiantes_importados=[]
    try:
        with open(file_path, "r",newline="") as file:
            reader=csv.DictReader(file)
            for row in reader:
                row["Nota de Español"]=float(row["Nota de Español"])
                row["Nota de Ingles"]=float(row["Nota de Ingles"])
                row["Nota de Sociales"]=float(row["Nota de Sociales"])
                row["Nota de Ciencias"]=float(row["Nota de Ciencias"])
                row["Promedio"]=float(row["Promedio"])
                estudiantes_importados.append(row)
            return estudiantes_importados
    except FileNotFoundError:
        return []

def run():
    estudiantes=[]
    encabezados=["Nombre completo","Seccion","Nota de Español","Nota de Ingles","Nota de Sociales","Nota de Ciencias","Promedio"]
    while True:
        print("-------------------------------------------")
        print("----- BASE DE DATOS DE LOS ESTUDIANTES-----")
        print("-------------------------------------------")
        mostrar_menu()
        opcion_Seleccionada=seleccionar_opcion()
        if opcion_Seleccionada ==1:
            while True:
                try:
                    cantidad=int(input("cuantos estudiantes desea ingresar?= "))
                    for n in range(cantidad):
                        nuevo_estudiante=ingresar_estudiante()
                        estudiantes.append(nuevo_estudiante)
                    break
                except ValueError:
                    print("Porfavor ingrese un numero valido")
        elif opcion_Seleccionada ==2:
            pass
        elif opcion_Seleccionada==3:
            pass
        elif opcion_Seleccionada==4:
            pass
        elif opcion_Seleccionada==5:
            if estudiantes:
                exportar_archivo_de_estudiantes("datos_de_estudiantes.csv",estudiantes,encabezados)
                print("Se han exportado los datos de los estudiantes a un archivo CSV de manera correcta")
            else:
                print("aun no hay informacion en nuestra base de datos, porfavor ingrese un estudiante primero")
        elif opcion_Seleccionada==6:
            estudiantes=importar_archivo_de_estudiantes("datos_de_estudiantes.csv")
            if estudiantes:
                print("Se ha importado el archivo de manera exitosa")
                print("La lista de estudiantes importada es:")
                for i, estudiante in enumerate(estudiantes, 1):
                    print(f"Estudiante numero {i}")
                    for clave, valor in estudiante.items():
                        print(f"{clave}: {valor}")
            else:
                print("No existe un archivo a importar")
        elif opcion_Seleccionada==7:
            print("Saliendo...")
            print("Hasta luego!!!")
            break


def eliminar_estudiante(estudiantes):
    estudiante_a_eliminar=None
    nombre_alumno_eliminar=input("Porfavor ingrese el nombre del alumno a eliminar: ")
    seccion_alumno_eliminar=input("porfavor ingrese la seccion del alumno a eliminar: ")
    eliminar_estudiante_mayuscula=nombre_alumno_eliminar.upper()
    eliminar_seccion_mayuscula=seccion_alumno_eliminar.upper()
    for i, estudiante in enumerate(estudiantes):
        if estudiante["Nombre completo"].upper()==eliminar_estudiante_mayuscula and estudiante["Seccion"].upper()==eliminar_seccion_mayuscula:
            print(f"se ha encontrado el Estudiante {eliminar_estudiante_mayuscula} de la seccion {eliminar_seccion_mayuscula}" )
            indice_a_eliminar=i
            estudiante_a_eliminar=estudiante
            break
    if estudiante_a_eliminar:
        while True:
            try:
                confirmacion=int(input("Esta seguro que desea eliminarlo?, prsione 1 para si, o presione 2 para no"))
                if confirmacion==1:
                    estudiantes.pop(indice_a_eliminar)
                    print(f"Se elimino el estudiante de la base de datos de manera exitosa!!!")
                    break
                elif confirmacion==2:
                    print("Accion cancelada")
                    break
                else:
                    print("porfavor ingrese un numero valido del 1-2")
            except ValueError:
                print("ingrese un numero valido")


